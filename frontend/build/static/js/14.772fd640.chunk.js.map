{"version":3,"file":"static/js/14.772fd640.chunk.js","mappings":"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","sources":["components/utils/GoogleBtn.jsx","components/utils/toast.jsx","pages/Login.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nexport default function GoogleBtn() {\r\n    return (\r\n        <>\r\n            <button\r\n                type=\"button\"\r\n                className=\"w-full block bg-white hover:bg-gray-100 focus:bg-gray-100 text-gray-900 font-semibold rounded-lg px-4 py-3 border border-gray-300\"\r\n            >\r\n                <div className=\"flex items-center justify-center\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" className=\"w-6 h-6\" viewBox=\"0 0 48 48\">\r\n                        <defs>\r\n                            <path id=\"a\" d=\"M44.5 20H24v8.5h11.8C34.7 33.9 30.1 37 24 37c-7.2 0-13-5.8-13-13s5.8-13 13-13c3.1 0 5.9 1.1 8.1 2.9l6.4-6.4C34.6 4.1 29.6 2 24 2 11.8 2 2 11.8 2 24s9.8 22 22 22c11 0 21-8 21-22 0-1.3-.2-2.7-.5-4z\" />\r\n                        </defs>\r\n                        <clipPath id=\"b\">\r\n                            <use xlinkHref=\"#a\" overflow=\"visible\" />\r\n                        </clipPath>\r\n                        <path clipPath=\"url(#b)\" fill=\"#FBBC05\" d=\"M0 37V11l17 13z\" />\r\n                        <path clipPath=\"url(#b)\" fill=\"#EA4335\" d=\"M0 11l17 13 7-6.1L48 14V0H0z\" />\r\n                        <path clipPath=\"url(#b)\" fill=\"#34A853\" d=\"M0 37l30-23 7.9 1L48 0v48H0z\" />\r\n                        <path clipPath=\"url(#b)\" fill=\"#4285F4\" d=\"M48 48L17 24l-4-3 35-10z\" />\r\n                    </svg>\r\n                    <span className=\"ml-4\">Log in with Google</span>\r\n                </div>\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Snackbar, Alert } from \"@mui/material\";\r\n\r\nexport default function ErrorToast({ msg , open,setOpen }) {\r\n\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === \"clickaway\") return;\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }} // Correct placement\r\n        >\r\n            <Alert\r\n                onClose={handleClose}\r\n                severity=\"error\"\r\n                variant=\"filled\"\r\n                sx={{ width: '100%' }}\r\n            >\r\n               {msg}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n","import axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getUser } from '../store/api/UserApi';\r\nimport { Button, CircularProgress, TextField } from '@mui/material';\r\nimport ErrorToast from '../components/utils/toast';\r\nimport GoogleBtn from '../components/utils/GoogleBtn';\r\n\r\nexport default function Login() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const [loggingIn, setLoggingIn] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandel = async (e) => {\r\n        e.preventDefault();\r\n        setLoggingIn(true);\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/login`, { email, password }, { withCredentials: true });\r\n            if (res.data.status) {\r\n                dispatch(getUser());\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            setError(error.response?.data?.message || 'An error occurred');\r\n            setOpen(true);\r\n        } finally {\r\n            setLoggingIn(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section className=\"flex w-full lg:bg-[#f4f4f4] items-center py-10 justify-center\">\r\n            <div className=\"bg-[#fff] lg:rounded-md lg:shadow-lg w-full md:max-w-md lg:max-w-full md:mx-0 md:w-1/2 xl:w-1/3 px-6 lg:px-16 xl:px-12 flex items-center justify-center\">\r\n                <div className=\"w-full py-5\">\r\n                    <h1 className=\"text-xl md:text-2xl font-bold leading-tight\">Log in to your account</h1>\r\n                    <form className=\"mt-6\" onSubmit={submitHandel}>\r\n                        <div>\r\n                            <TextField\r\n                                type=\"email\"\r\n                                autoFocus\r\n                                fullWidth\r\n                                value={email}\r\n                                label=\"Email\"\r\n                                required\r\n                                error={!!error}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"mt-4\">\r\n                            <TextField\r\n                                fullWidth\r\n                                type=\"password\"\r\n                                label=\"Password\"\r\n                                required\r\n                                value={password}\r\n                                error={!!error}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"text-right mt-2\">\r\n                            <a href=\"#\" className=\"text-sm font-semibold text-gray-700 hover:text-blue-700 focus:text-blue-700\">Forgot Password?</a>\r\n                        </div>\r\n\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                            disabled={loggingIn}\r\n                            sx={{\r\n                                margin:\"10px 0\",\r\n                                padding:'10px 0'\r\n                            }}\r\n                        >\r\n                            {loggingIn ? <CircularProgress color=\"white\" size=\"25px\" /> : \"Log in\"}\r\n                        </Button>\r\n                    </form>\r\n\r\n                    <hr className=\"my-6 border-gray-300 w-full\" />\r\n                    <GoogleBtn />\r\n                    <p className=\"mt-8\">\r\n                        Need an account? <Link to=\"/signup\" className=\"text-[#251e6b] hover:text-blue-700 font-semibold\">Create an account</Link>\r\n                    </p>\r\n\r\n                    {error && <ErrorToast setOpen={setOpen} open={open} msg={error} />}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n"],"names":["GoogleBtn","_jsx","_Fragment","children","type","className","_jsxs","xmlns","xmlnsXlink","viewBox","id","d","xlinkHref","overflow","clipPath","fill","ErrorToast","_ref","msg","open","setOpen","handleClose","event","reason","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","variant","sx","width","Login","email","setEmail","useState","password","setPassword","error","setError","loggingIn","setLoggingIn","dispatch","useDispatch","onSubmit","async","e","preventDefault","axios","post","withCredentials","data","status","getUser","_error$response","_error$response$data","console","response","message","TextField","autoFocus","fullWidth","value","label","required","onChange","target","href","Button","disabled","margin","padding","CircularProgress","color","size","Link","to"],"sourceRoot":""}