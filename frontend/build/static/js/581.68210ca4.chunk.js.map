{"version":3,"file":"static/js/581.68210ca4.chunk.js","mappings":"yIAEe,SAASA,IACpB,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAAA,UACIG,KAAK,SACLC,UAAU,oIAAmIF,UAE7IG,EAAAA,EAAAA,MAAA,OAAKD,UAAU,mCAAkCF,SAAA,EAC7CG,EAAAA,EAAAA,MAAA,OAAKC,MAAM,6BAA6BC,WAAW,+BAA+BH,UAAU,UAAUI,QAAQ,YAAWN,SAAA,EACrHF,EAAAA,EAAAA,KAAA,QAAAE,UACIF,EAAAA,EAAAA,KAAA,QAAMS,GAAG,IAAIC,EAAE,2MAEnBV,EAAAA,EAAAA,KAAA,YAAUS,GAAG,IAAGP,UACZF,EAAAA,EAAAA,KAAA,OAAKW,UAAU,KAAKC,SAAS,eAEjCZ,EAAAA,EAAAA,KAAA,QAAMa,SAAS,UAAUC,KAAK,UAAUJ,EAAE,qBAC1CV,EAAAA,EAAAA,KAAA,QAAMa,SAAS,UAAUC,KAAK,UAAUJ,EAAE,kCAC1CV,EAAAA,EAAAA,KAAA,QAAMa,SAAS,UAAUC,KAAK,UAAUJ,EAAE,kCAC1CV,EAAAA,EAAAA,KAAA,QAAMa,SAAS,UAAUC,KAAK,UAAUJ,EAAE,iCAE9CV,EAAAA,EAAAA,KAAA,QAAMI,UAAU,OAAMF,SAAC,6BAK3C,C,0ECxBe,SAASa,EAAUC,GAA0B,IAAzB,IAAEC,EAAG,KAAGC,EAAI,QAACC,GAASH,EAGrD,MAAMI,EAAcA,CAACC,EAAOC,KACT,cAAXA,GACJH,GAAQ,EAAM,EAGlB,OACInB,EAAAA,EAAAA,KAACuB,EAAAA,EAAQ,CAACL,KAAMA,EAAMM,iBAAkB,IAAMC,QAASL,EACvDM,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAAW1B,UAEvDF,EAAAA,EAAAA,KAAC6B,EAAAA,EAAK,CACFJ,QAASL,EACTU,SAAS,QACTC,QAAQ,SACRC,GAAI,CAAEC,MAAO,QAAS/B,SAEtBe,KAIhB,C,yKChBe,SAASiB,KACpBC,EAAAA,EAAAA,YAAU,KACNC,SAASC,MAAQ,yBAAyB,GAC3C,IAEH,MAAOnB,EAAMC,IAAWmB,EAAAA,EAAAA,WAAS,IAC1BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,OAC5BG,EAAaC,IAAeJ,EAAAA,EAAAA,WAAS,GACtCK,GAAWC,EAAAA,EAAAA,OAEVC,EAAUC,IAAeR,EAAAA,EAAAA,UAAS,CACrCS,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,YAAa,GACbC,QAAS,GACTC,WAAY,MAGTC,EAAmBC,IAAwBjB,EAAAA,EAAAA,UAAS,KACpDkB,EAAqBC,IAA0BnB,EAAAA,EAAAA,WAAS,GAYzDoB,EAAiBC,IACnBb,EAAY,IAAKD,EAAU,CAACc,EAAEC,OAAOb,MAAOY,EAAEC,OAAOC,OAAQ,EAuCjE,OACI7D,EAAAA,EAAAA,KAAA,WAASI,UAAU,kDAAiDF,UAEhEG,EAAAA,EAAAA,MAAA,OAAKD,UAAU,oHAAmHF,SAAA,EAC9HG,EAAAA,EAAAA,MAAA,QAAMyD,SAzBIC,UAGlB,GAFAJ,EAAEK,iBACFtB,GAAY,GACRG,EAASI,WAAaJ,EAASK,gBAI/B,OAHAV,EAAS,oDACTrB,GAAQ,QACRuB,GAAY,GAIhB,UACUuB,EAAAA,EAAMC,KAAK,sCAAkDrB,EAAU,CAAEsB,iBAAiB,IAChGxB,GAASyB,EAAAA,EAAAA,KACb,CAAE,MAAO7B,GAAQ,IAAD8B,EAAAC,EACZ9B,GAAuB,QAAd6B,EAAA9B,EAAMgC,gBAAQ,IAAAF,GAAM,QAANC,EAAdD,EAAgBG,YAAI,IAAAF,OAAN,EAAdA,EAAsBG,UAAW,uBAC1CtD,GAAQ,EACZ,CAAC,QACGuB,GAAY,EAChB,GAOuCtC,UAAU,uDAAsDF,SAAA,EAC3FF,EAAAA,EAAAA,KAAA,MAAII,UAAU,8CAA6CF,SAAC,0BAC5DG,EAAAA,EAAAA,MAAA,OAAKD,UAAU,OAAMF,SAAA,EACjBG,EAAAA,EAAAA,MAAA,OAAKD,UAAU,wCAAuCF,SAAA,EAClDF,EAAAA,EAAAA,KAAC0E,EAAAA,EAAS,CACNC,WAAS,EACTC,WAAS,EACT7C,QAAQ,WACR8B,MAAOhB,EAASE,KAChB8B,SAAUnB,EACVX,KAAK,OACL+B,MAAM,OACNC,UAAQ,KAEZ/E,EAAAA,EAAAA,KAAC0E,EAAAA,EAAS,CACNE,WAAS,EACT7C,QAAQ,WACR8B,MAAOhB,EAASG,MAChB6B,SAAUnB,EACVvD,KAAK,QACL2E,MAAM,QACN/B,KAAK,QACLgC,UAAQ,KAEZ/E,EAAAA,EAAAA,KAAC0E,EAAAA,EAAS,CACNE,WAAS,EACT7C,QAAQ,WACR8B,MAAOhB,EAASI,SAChB4B,SAAUnB,EACVvD,KAAK,WACL2E,MAAM,WACN/B,KAAK,WACLgC,UAAQ,KAEZ/E,EAAAA,EAAAA,KAAC0E,EAAAA,EAAS,CACNE,WAAS,EACT7C,QAAQ,WACR8B,MAAOhB,EAASK,gBAChB2B,SAAUnB,EACVvD,KAAK,WACL2E,MAAM,mBACN/B,KAAK,kBACLgC,UAAQ,KAEZ/E,EAAAA,EAAAA,KAAC0E,EAAAA,EAAS,CACNvE,KAAK,SACL2E,MAAM,gBACNF,WAAS,EACT7C,QAAQ,WACRgB,KAAK,cACLc,MAAOhB,EAASM,YAEhB4B,UAAQ,EACRF,SAAUnB,KAEd1D,EAAAA,EAAAA,KAACgF,EAAAA,EAAY,CAETD,UAAQ,EACRE,QAhHL,CACnB,mBACA,yBACA,yBACA,0BACA,sBACA,WACA,OA0GwBC,UAAQ,EACRrB,MAAOhB,EAASO,QAChByB,SAAUA,CAACxD,EAAO8D,KACdrC,EAAY,IAAKD,EAAUO,QAAS+B,GAAW,EAEnDC,YAAcC,IACVrF,EAAAA,EAAAA,KAAC0E,EAAAA,EAAS,CAENK,UAAQ,KACJM,EACJP,MAAM,UACN/C,QAAQ,WACRgB,KAAK,eAIjB/C,EAAAA,EAAAA,KAACgF,EAAAA,EAAY,CAETD,UAAQ,EACRE,QAAS3B,EACT4B,UAAQ,EACRI,QAAS9B,EACT+B,cAAeA,CAAClE,EAAOmE,KACfA,GA1HVzB,WACtBN,GAAuB,GACvB,IACI,MAGMgC,SAHiBxB,EAAAA,EAAMyB,IAAI,0CAA2C,CACxEL,OAAQ,CAAEM,QAAS,QAAS5C,KAAM6C,MAELpB,KAAKqB,KAAKC,GAAQA,EAAI/C,OACvDQ,EAAqBkC,EACzB,CAAE,MAAOlD,GACLwD,QAAQxD,MAAM,+BAAgCA,EAClD,CAAC,QACGkB,GAAuB,EAC3B,GA8G+CuC,CAAkBR,EAAc,EAEvDX,SAAUA,CAACxD,EAAO8D,KACdrC,EAAY,IAAKD,EAAUQ,WAAY8B,GAAW,EAEtDC,YAAcC,IACVrF,EAAAA,EAAAA,KAAC0E,EAAAA,EAAS,CACNK,UAAQ,KAEJM,EACJP,MAAM,aACN/C,QAAQ,WACRgB,KAAK,aACLkD,WAAY,IACLZ,EAAOY,WACVC,cACI7F,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,CACKsD,GAAsBxD,EAAAA,EAAAA,KAACmG,EAAAA,EAAgB,CAACC,KAAM,KAAS,KACvDf,EAAOY,WAAWC,yBAS/ClG,EAAAA,EAAAA,KAACqG,EAAAA,EAAM,CACHzB,WAAS,EACT5C,GAAI,CAAEsE,OAAQ,aAAcC,QAAQ,UAEpCxE,QAAQ,YACR5B,KAAK,SAAQD,SAEZuC,GAAczC,EAAAA,EAAAA,KAACmG,EAAAA,EAAgB,CAACC,KAAM,GAAIpE,GAAI,CAAEwE,MAAO,WAAgB,gBAIhFxG,EAAAA,EAAAA,KAAA,MAAII,UAAU,iCACdJ,EAAAA,EAAAA,KAACD,EAAAA,EAAS,KACVM,EAAAA,EAAAA,MAAA,KAAGD,UAAU,OAAMF,SAAA,CAAC,oBACAF,EAAAA,EAAAA,KAACyG,EAAAA,GAAI,CAACC,GAAG,IAAItG,UAAU,kDAAiDF,SAAC,gBAGhGqC,IAASvC,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACG,KAAMA,EAAMC,QAASA,EAASF,IAAKsB,QAIzE,C","sources":["components/utils/GoogleBtn.jsx","components/utils/toast.jsx","pages/SignUp.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nexport default function GoogleBtn() {\r\n    return (\r\n        <>\r\n            <button\r\n                type=\"button\"\r\n                className=\"w-full block bg-white hover:bg-gray-100 focus:bg-gray-100 text-gray-900 font-semibold rounded-lg px-4 py-3 border border-gray-300\"\r\n            >\r\n                <div className=\"flex items-center justify-center\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" className=\"w-6 h-6\" viewBox=\"0 0 48 48\">\r\n                        <defs>\r\n                            <path id=\"a\" d=\"M44.5 20H24v8.5h11.8C34.7 33.9 30.1 37 24 37c-7.2 0-13-5.8-13-13s5.8-13 13-13c3.1 0 5.9 1.1 8.1 2.9l6.4-6.4C34.6 4.1 29.6 2 24 2 11.8 2 2 11.8 2 24s9.8 22 22 22c11 0 21-8 21-22 0-1.3-.2-2.7-.5-4z\" />\r\n                        </defs>\r\n                        <clipPath id=\"b\">\r\n                            <use xlinkHref=\"#a\" overflow=\"visible\" />\r\n                        </clipPath>\r\n                        <path clipPath=\"url(#b)\" fill=\"#FBBC05\" d=\"M0 37V11l17 13z\" />\r\n                        <path clipPath=\"url(#b)\" fill=\"#EA4335\" d=\"M0 11l17 13 7-6.1L48 14V0H0z\" />\r\n                        <path clipPath=\"url(#b)\" fill=\"#34A853\" d=\"M0 37l30-23 7.9 1L48 0v48H0z\" />\r\n                        <path clipPath=\"url(#b)\" fill=\"#4285F4\" d=\"M48 48L17 24l-4-3 35-10z\" />\r\n                    </svg>\r\n                    <span className=\"ml-4\">Log in with Google</span>\r\n                </div>\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Snackbar, Alert } from \"@mui/material\";\r\n\r\nexport default function ErrorToast({ msg , open,setOpen }) {\r\n\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === \"clickaway\") return;\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }} // Correct placement\r\n        >\r\n            <Alert\r\n                onClose={handleClose}\r\n                severity=\"error\"\r\n                variant=\"filled\"\r\n                sx={{ width: '100%' }}\r\n            >\r\n               {msg}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, CircularProgress, TextField, Autocomplete } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getUser } from '../store/api/UserApi';\r\nimport GoogleBtn from '../components/utils/GoogleBtn';\r\nimport ErrorToast from '../components/utils/toast';\r\n\r\nexport default function SignUp() {\r\n    useEffect(() => {\r\n        document.title = \"Register with Pareeksha\";\r\n    }, []);\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [registering, setRegister] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        yearOfStudy: \"\",\r\n        program: \"\",\r\n        university: \"\",\r\n    });\r\n\r\n    const [universityOptions, setUniversityOptions] = useState([]);\r\n    const [loadingUniversities, setLoadingUniversities] = useState(false);\r\n\r\n    const programOptions = [\r\n        \"Computer Science\",\r\n        \"Electrical Engineering\",\r\n        \"Mechanical Engineering\",\r\n        \"Business Administration\",\r\n        \"Arts and Humanities\",\r\n        \"Medicine\",\r\n        \"Law\"\r\n    ];\r\n\r\n    const changeHandler = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const fetchUniversities = async (query) => {\r\n        setLoadingUniversities(true);\r\n        try {\r\n            const response = await axios.get(`http://universities.hipolabs.com/search`, {\r\n                params: { country: 'India', name: query },\r\n            });\r\n            const universityNames = response.data.map((uni) => uni.name);\r\n            setUniversityOptions(universityNames);\r\n        } catch (error) {\r\n            console.error(\"Error fetching universities:\", error);\r\n        } finally {\r\n            setLoadingUniversities(false);\r\n        }\r\n    };\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n        setRegister(true);\r\n        if (formData.password !== formData.confirmPassword) {\r\n            setError(\"Password and Confirm Password should be the same\");\r\n            setOpen(true);\r\n            setRegister(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await axios.post(`${process.env.REACT_APP_API_URL}/auth/register`, formData, { withCredentials: true });\r\n            dispatch(getUser());\r\n        } catch (error) {\r\n            setError(error.response?.data?.message || \"Registration failed\");\r\n            setOpen(true);\r\n        } finally {\r\n            setRegister(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section className=\"flex flex-col md:flex-row h-screen items-center\">\r\n\r\n            <div className=\"xl:bg-[#f3f3f3]  w-full md:max-w-xl lg:max-w-full md:mx-auto xl:w-full px-6 lg:px-16 xl:px-12 flex justify-center\">\r\n                <form onSubmit={submitHandler} className=\"w-full bg-white shadow-xl py-5 px-8  max-w-3xl my-10\">\r\n                    <h1 className=\"text-xl md:text-2xl font-bold leading-tight\">Create a new account</h1>\r\n                    <div className=\"mt-6\">\r\n                        <div className='grid grid-cols-1 md:grid-cols-2 gap-3'>\r\n                            <TextField\r\n                                autoFocus\r\n                                fullWidth\r\n                                variant='standard'\r\n                                value={formData.name}\r\n                                onChange={changeHandler}\r\n                                name='name'\r\n                                label=\"Name\"\r\n                                required\r\n                            />\r\n                            <TextField\r\n                                fullWidth\r\n                                variant='standard'\r\n                                value={formData.email}\r\n                                onChange={changeHandler}\r\n                                type='email'\r\n                                label=\"Email\"\r\n                                name='email'\r\n                                required\r\n                            />\r\n                            <TextField\r\n                                fullWidth\r\n                                variant='standard'\r\n                                value={formData.password}\r\n                                onChange={changeHandler}\r\n                                type='password'\r\n                                label=\"Password\"\r\n                                name='password'\r\n                                required\r\n                            />\r\n                            <TextField\r\n                                fullWidth\r\n                                variant='standard'\r\n                                value={formData.confirmPassword}\r\n                                onChange={changeHandler}\r\n                                type='password'\r\n                                label=\"Confirm Password\"\r\n                                name='confirmPassword'\r\n                                required\r\n                            />\r\n                            <TextField\r\n                                type='number'\r\n                                label='Year of Study'\r\n                                fullWidth\r\n                                variant='standard'\r\n                                name='yearOfStudy'\r\n                                value={formData.yearOfStudy}\r\n                                \r\n                                required\r\n                                onChange={changeHandler}\r\n                            />\r\n                            <Autocomplete\r\n                                \r\n                                required\r\n                                options={programOptions}\r\n                                freeSolo\r\n                                value={formData.program}\r\n                                onChange={(event, newValue) => {\r\n                                    setFormData({ ...formData, program: newValue });\r\n                                }}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        \r\n                                        required\r\n                                        {...params}\r\n                                        label=\"Program\"\r\n                                        variant=\"standard\"\r\n                                        name=\"program\"\r\n                                    />\r\n                                )}\r\n                            />\r\n                            <Autocomplete\r\n                                \r\n                                required\r\n                                options={universityOptions}\r\n                                freeSolo\r\n                                loading={loadingUniversities}\r\n                                onInputChange={(event, newInputValue) => {\r\n                                    if (newInputValue) fetchUniversities(newInputValue);\r\n                                }}\r\n                                onChange={(event, newValue) => {\r\n                                    setFormData({ ...formData, university: newValue });\r\n                                }}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        required\r\n                                        \r\n                                        {...params}\r\n                                        label=\"University\"\r\n                                        variant=\"standard\"\r\n                                        name=\"university\"\r\n                                        InputProps={{\r\n                                            ...params.InputProps,\r\n                                            endAdornment: (\r\n                                                <>\r\n                                                    {loadingUniversities ? <CircularProgress size={20} /> : null}\r\n                                                    {params.InputProps.endAdornment}\r\n                                                </>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </div>\r\n\r\n                        <Button\r\n                            fullWidth\r\n                            sx={{ margin: \"25px 0 0 0\" ,padding:\"11px 0\"}}\r\n\r\n                            variant='contained'\r\n                            type=\"submit\"\r\n                        >\r\n                            {registering ? <CircularProgress size={25} sx={{ color: \"white\" }} /> : \"Sign Up\"}\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <hr className=\"my-6 border-gray-300 w-full\" />\r\n                    <GoogleBtn />\r\n                    <p className=\"mt-8\">\r\n                        Already a user? <Link to='/' className=\"text-blue-500 hover:text-blue-700 font-semibold\">Login</Link>\r\n                    </p>\r\n                </form>\r\n                {error && <ErrorToast open={open} setOpen={setOpen} msg={error} />}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\n"],"names":["GoogleBtn","_jsx","_Fragment","children","type","className","_jsxs","xmlns","xmlnsXlink","viewBox","id","d","xlinkHref","overflow","clipPath","fill","ErrorToast","_ref","msg","open","setOpen","handleClose","event","reason","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","variant","sx","width","SignUp","useEffect","document","title","useState","error","setError","registering","setRegister","dispatch","useDispatch","formData","setFormData","name","email","password","confirmPassword","yearOfStudy","program","university","universityOptions","setUniversityOptions","loadingUniversities","setLoadingUniversities","changeHandler","e","target","value","onSubmit","async","preventDefault","axios","post","withCredentials","getUser","_error$response","_error$response$data","response","data","message","TextField","autoFocus","fullWidth","onChange","label","required","Autocomplete","options","freeSolo","newValue","renderInput","params","loading","onInputChange","newInputValue","universityNames","get","country","query","map","uni","console","fetchUniversities","InputProps","endAdornment","CircularProgress","size","Button","margin","padding","color","Link","to"],"sourceRoot":""}