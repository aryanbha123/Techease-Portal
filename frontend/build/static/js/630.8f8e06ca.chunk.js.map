{"version":3,"file":"static/js/630.8f8e06ca.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/OutlinedFlag.js","components/shared/QuizUI.jsx","pages/Quiz.jsx","../node_modules/@mui/material/SvgIcon/svgIconClasses.js","../node_modules/@mui/material/SvgIcon/SvgIcon.js","../node_modules/@mui/material/utils/createSvgIcon.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m14 6-1-2H5v17h2v-7h5l1 2h7V6zm4 8h-4l-1-2H7V6h5l1 2h5z\"\n}), 'OutlinedFlag');","import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { OutlinedFlag } from '@mui/icons-material';\r\n\r\nexport default function QuizUI({ quiz = {} }) {\r\n  const navigate = useNavigate();\r\n  const dummyQuiz = {\r\n    name: \"JavaScript Basics\",\r\n    description: \"A beginner-friendly quiz to test your knowledge of JavaScript fundamentals.\",\r\n    maxMarks: 10,\r\n    duration: 20, // duration in minutes\r\n    openingTime: new Date(\"2024-12-01T09:00:00Z\"),\r\n    closingTime: new Date(\"2024-12-01T12:00:00Z\"),\r\n    createdBy: \"64f123abc456def789123456\",\r\n    questions: [\r\n      {\r\n        text: \"What is the output of `console.log(typeof null)`?\",\r\n        image: null,\r\n        options: [\r\n          { text: \"object\", isCorrect: true },\r\n          { text: \"null\", isCorrect: false },\r\n          { text: \"undefined\", isCorrect: false },\r\n          { text: \"error\", isCorrect: false },\r\n        ],\r\n        marks: 1\r\n      },\r\n      {\r\n        text: \"Which of the following is not a reserved keyword in JavaScript?\",\r\n        image: null,\r\n        options: [\r\n          { text: \"interface\", isCorrect: false },\r\n          { text: \"program\", isCorrect: true },\r\n          { text: \"throws\", isCorrect: false },\r\n          { text: \"abstract\", isCorrect: false },\r\n        ],\r\n        marks: 2\r\n      },\r\n      // Add other questions here...\r\n    ]\r\n  };\r\n\r\n  const [startedQuiz, setStartedQuiz] = useState(null);\r\n  const [questionNo, setQuestionNo] = useState(1);\r\n  const [remainingTime, setRemainingTime] = useState(dummyQuiz.duration * 60 * 1000);\r\n  const [userAnswers, setUserAnswers] = useState({});\r\n  const [questionStatus, setQuestionStatus] = useState({});  // Track question status (attempted or skipped)\r\n  const [flaggedQuestions, setFlaggedQuestions] = useState({});  // Track flagged questions\r\n\r\n  const questions = dummyQuiz.questions;\r\n\r\n  useEffect(() => {\r\n    if (!startedQuiz) {\r\n      setStartedQuiz(Date.now());\r\n    }\r\n\r\n    const calculateRemainingTime = () => {\r\n      if (startedQuiz) {\r\n        const elapsedTime = Date.now() - startedQuiz;\r\n        const timeRemaining = remainingTime - elapsedTime;\r\n        if (timeRemaining <= 0) {\r\n          setRemainingTime(0);\r\n          handleSubmitQuiz();\r\n        } else {\r\n          setRemainingTime(timeRemaining);\r\n        }\r\n      }\r\n    };\r\n\r\n    calculateRemainingTime();\r\n\r\n    const timer = setInterval(() => {\r\n      calculateRemainingTime();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [startedQuiz]);\r\n\r\n  const formatTime = (time) => {\r\n    const minutes = Math.floor(time / (1000 * 60));\r\n    const seconds = Math.floor((time % (1000 * 60)) / 1000);\r\n    return `${minutes < 10 ? '0' + minutes : minutes}:${seconds < 10 ? '0' + seconds : seconds}`;\r\n  };\r\n\r\n  const handleAnswerChange = (questionIndex, selectedOption) => {\r\n    setUserAnswers((prevAnswers) => {\r\n      const updatedAnswers = { ...prevAnswers, [questionIndex]: selectedOption };\r\n      setQuestionStatus((prevStatus) => ({ ...prevStatus, [questionIndex]: 'attempted' }));\r\n      return updatedAnswers;\r\n    });\r\n  };\r\n\r\n  const handleSkipQuestion = (currentQuestionNo) => {\r\n    setQuestionStatus((prevStatus) => ({ ...prevStatus, [currentQuestionNo]: 'skipped' }));\r\n  };\r\n\r\n  const handleFlagQuestion = () => {\r\n    setFlaggedQuestions((prevFlags) => ({ ...prevFlags, [questionNo - 1]: !prevFlags[questionNo - 1] }));\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (!userAnswers[questionNo - 1]) {  // If the question is not answered\r\n      setQuestionStatus((prevStatus) => ({ ...prevStatus, [questionNo - 1]: 'skipped' }));  // Mark it as skipped\r\n    }\r\n    setQuestionNo((prevNo) => Math.min(prevNo + 1, dummyQuiz.questions.length));\r\n  };\r\n\r\n  const handlePreviousQuestion = () => {\r\n    setQuestionNo((prevNo) => Math.max(prevNo - 1, 1));\r\n    if (!userAnswers[questionNo - 1]) {  // If the question was not answered when going back, mark as skipped\r\n      setQuestionStatus((prevStatus) => ({ ...prevStatus, [questionNo - 1]: 'skipped' }));\r\n    }\r\n  };\r\n\r\n  const handleSubmitQuiz = () => {\r\n    alert('Time is up! Submitting your quiz.');\r\n    navigate(\"/results\");\r\n  };\r\n\r\n  const handleFinalSubmit = () => {\r\n    const responses = [];\r\n    questions.map((_, index) => {\r\n      if (userAnswers[index]) {\r\n        const res = { question: questions[index], answer: userAnswers[index] };\r\n        responses.push(res);\r\n      }\r\n    });\r\n    console.log(responses);\r\n    alert(\"Quiz submitted!\");\r\n    // navigate(\"/results\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container p-8 \">\r\n      <div className=\"flex flex-col lg:flex-row gap-8 justify-center items-start\">\r\n        <div className=\"flex-1 p-6 relative bg-white shadow-xl rounded-lg border border-gray-200\">\r\n          <div className=\"text-xl font-semibold mb-4 text-gray-900\">{dummyQuiz.name}</div>\r\n          <div className=\"text-sm text-gray-700 mb-4\">{dummyQuiz.description}</div>\r\n          <button\r\n            onClick={handleFlagQuestion}\r\n            className={` ${flaggedQuestions[questionNo - 1] ? 'bg-yellow-400' : ''} absolute right-4 p-1 text-sm rounded-full transition duration-200`}>\r\n            {flaggedQuestions[questionNo - 1] ? \"\" : \"\"} <OutlinedFlag />\r\n          </button>\r\n          <div className=\"text-lg font-semibold mb-4\">Question {questionNo}:</div>\r\n          <div className=\"text-sm text-gray-800 mb-4\">{dummyQuiz.questions[questionNo - 1].text}</div>\r\n\r\n          <div className=\"mt-6 space-y-2\">\r\n            {dummyQuiz.questions[questionNo - 1].options.map((i) => (\r\n              <div key={i.text} className=\"flex items-center gap-3\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name={`option${questionNo}`}\r\n                  value={i.text}\r\n                  checked={JSON.stringify(userAnswers[questionNo - 1]) === JSON.stringify(i)}\r\n                  onChange={() => handleAnswerChange(questionNo - 1, i)}\r\n                  className=\"form-radio text-sm\"\r\n                />\r\n                <label className=\"text-sm text-gray-800\">{i.text}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"flex gap-6 mt-6 justify-between\">\r\n            <button\r\n              disabled={questionNo === 1}\r\n              onClick={handlePreviousQuestion}\r\n              className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition duration-200 text-sm\">\r\n              Previous\r\n            </button>\r\n            <button\r\n              disabled={questionNo === dummyQuiz.questions.length}\r\n              onClick={handleNextQuestion}\r\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition duration-200 text-sm\">\r\n              Next\r\n            </button>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"w-80 bg-gray-800 text-white p-6 rounded-lg shadow-xl\">\r\n          <div className=\"text-sm font-semibold mb-4\">Remaining Time</div>\r\n          <div className=\"text-xl font-bold\">{formatTime(remainingTime)}</div>\r\n\r\n          <div className=\"flex flex-wrap gap-4 mt-6\">\r\n            {dummyQuiz.questions.map((_, index) => (\r\n              <div\r\n                key={index}\r\n                onClick={() => {\r\n                  if (!userAnswers[questionNo - 1]) {  // If the question is not answered\r\n                    setQuestionStatus((prevStatus) => ({ ...prevStatus, [questionNo - 1]: 'skipped' }));  // Mark it as skipped\r\n                  }; setQuestionNo(index + 1)\r\n                }}\r\n                className={`w-12 h-12 flex items-center justify-center cursor-pointer rounded-full\r\n                  ${questionStatus[index] === 'attempted' ? 'bg-green-600' :\r\n                    questionStatus[index] === 'skipped' ? 'bg-red-600' :\r\n                      'bg-gray-600'} ${flaggedQuestions[index] ? 'bg-yellow-400' : ''} \r\n                  hover:bg-blue-500 transition duration-200 text-sm`}>\r\n                <div>{index + 1}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <button\r\n            onClick={handleSubmitQuiz}\r\n            className=\"w-full mt-8 bg-red-600 text-white py-2 rounded-lg hover:bg-red-700 transition duration-200 text-sm\">\r\n            Submit Quiz\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport QuizUI from \"../components/shared/QuizUI\";\r\n\r\nconst Quiz = () => {\r\n\r\n    const quiz = {\r\n        name: \"JavaScript Basics\",\r\n        description: \"A beginner-friendly quiz to test your knowledge of JavaScript fundamentals.\",\r\n        maxMarks: 10,\r\n        duration: 20,\r\n        openingTime: new Date(\"2024-12-01T09:00:00Z\"), // Opening time in UTC\r\n        closingTime: new Date(\"2024-12-01T12:00:00Z\"), // Closing time in UTC\r\n        createdBy: \"64f123abc456def789123456\", // Replace with a valid User ObjectId\r\n        questions: [\r\n            {\r\n                text: \"What is the output of `console.log(typeof null)`?\",\r\n                image: null,\r\n                options: [\r\n                    { text: \"object\", isCorrect: true },\r\n                    { text: \"null\", isCorrect: false },\r\n                    { text: \"undefined\", isCorrect: false },\r\n                    { text: \"error\", isCorrect: false },\r\n                ],\r\n                marks: 1\r\n            },\r\n            {\r\n                text: \"Which of the following is not a reserved keyword in JavaScript?\",\r\n                image: null,\r\n                options: [\r\n                    { text: \"interface\", isCorrect: false },\r\n                    { text: \"program\", isCorrect: true },\r\n                    { text: \"throws\", isCorrect: false },\r\n                    { text: \"abstract\", isCorrect: false },\r\n                ],\r\n                marks: 2\r\n            },\r\n            {\r\n                text: \"What will the following code output? `console.log(1 + '1');`\",\r\n                image: null,\r\n                options: [\r\n                    { text: \"2\", isCorrect: false },\r\n                    { text: \"11\", isCorrect: true },\r\n                    { text: \"NaN\", isCorrect: false },\r\n                    { text: \"undefined\", isCorrect: false },\r\n                ],\r\n                marks: 1\r\n            },\r\n            {\r\n                text: \"Which of the following methods is used to parse a JSON string?\",\r\n                image: null,\r\n                options: [\r\n                    { text: \"JSON.stringify()\", isCorrect: false },\r\n                    { text: \"JSON.parse()\", isCorrect: true },\r\n                    { text: \"JSON.objectify()\", isCorrect: false },\r\n                    { text: \"JSON.encode()\", isCorrect: false },\r\n                ],\r\n                marks: 2\r\n            },\r\n            {\r\n                text: \"What does `NaN` stand for in JavaScript?\",\r\n                image: null,\r\n                options: [\r\n                    { text: \"Not a Number\", isCorrect: true },\r\n                    { text: \"Null and Nullified\", isCorrect: false },\r\n                    { text: \"No Actual Name\", isCorrect: false },\r\n                    { text: \"Node and Network\", isCorrect: false },\r\n                ],\r\n                marks: 1\r\n            }\r\n        ]\r\n    };\r\n\r\n    const [user, setUser] = useState(true);\r\n\r\n    if (!user) {\r\n        return <button onClick={() => { setUser(true) }} >Btn</button>\r\n    }\r\n    return (\r\n        <>\r\n            <QuizUI quiz={quiz} />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Quiz;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSvgIconUtilityClass(slot) {\n  return generateUtilityClass('MuiSvgIcon', slot);\n}\nconst svgIconClasses = generateUtilityClasses('MuiSvgIcon', ['root', 'colorPrimary', 'colorSecondary', 'colorAction', 'colorError', 'colorDisabled', 'fontSizeInherit', 'fontSizeSmall', 'fontSizeMedium', 'fontSizeLarge']);\nexport default svgIconClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getSvgIconUtilityClass } from \"./svgIconClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getSvgIconUtilityClass, classes);\n};\nconst SvgIconRoot = styled('svg', {\n  name: 'MuiSvgIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  userSelect: 'none',\n  width: '1em',\n  height: '1em',\n  display: 'inline-block',\n  flexShrink: 0,\n  transition: theme.transitions?.create?.('fill', {\n    duration: (theme.vars ?? theme).transitions?.duration?.shorter\n  }),\n  variants: [{\n    props: props => !props.hasSvgAsChild,\n    style: {\n      // the <svg> will define the property that has `currentColor`\n      // for example heroicons uses fill=\"none\" and stroke=\"currentColor\"\n      fill: 'currentColor'\n    }\n  }, {\n    props: {\n      fontSize: 'inherit'\n    },\n    style: {\n      fontSize: 'inherit'\n    }\n  }, {\n    props: {\n      fontSize: 'small'\n    },\n    style: {\n      fontSize: theme.typography?.pxToRem?.(20) || '1.25rem'\n    }\n  }, {\n    props: {\n      fontSize: 'medium'\n    },\n    style: {\n      fontSize: theme.typography?.pxToRem?.(24) || '1.5rem'\n    }\n  }, {\n    props: {\n      fontSize: 'large'\n    },\n    style: {\n      fontSize: theme.typography?.pxToRem?.(35) || '2.1875rem'\n    }\n  },\n  // TODO v5 deprecate color prop, v6 remove for sx\n  ...Object.entries((theme.vars ?? theme).palette).filter(([, value]) => value && value.main).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars ?? theme).palette?.[color]?.main\n    }\n  })), {\n    props: {\n      color: 'action'\n    },\n    style: {\n      color: (theme.vars ?? theme).palette?.action?.active\n    }\n  }, {\n    props: {\n      color: 'disabled'\n    },\n    style: {\n      color: (theme.vars ?? theme).palette?.action?.disabled\n    }\n  }, {\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      color: undefined\n    }\n  }]\n})));\nconst SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSvgIcon'\n  });\n  const {\n    children,\n    className,\n    color = 'inherit',\n    component = 'svg',\n    fontSize = 'medium',\n    htmlColor,\n    inheritViewBox = false,\n    titleAccess,\n    viewBox = '0 0 24 24',\n    ...other\n  } = props;\n  const hasSvgAsChild = /*#__PURE__*/React.isValidElement(children) && children.type === 'svg';\n  const ownerState = {\n    ...props,\n    color,\n    component,\n    fontSize,\n    instanceFontSize: inProps.fontSize,\n    inheritViewBox,\n    viewBox,\n    hasSvgAsChild\n  };\n  const more = {};\n  if (!inheritViewBox) {\n    more.viewBox = viewBox;\n  }\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SvgIconRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    focusable: \"false\",\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref,\n    ...more,\n    ...other,\n    ...(hasSvgAsChild && children.props),\n    ownerState: ownerState,\n    children: [hasSvgAsChild ? children.props.children : children, titleAccess ? /*#__PURE__*/_jsx(\"title\", {\n      children: titleAccess\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   * @default 'inherit'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n  /**\n   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\n   * prop will be ignored.\n   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that\n   * `component`'s viewBox to the root node.\n   * @default false\n   */\n  inheritViewBox: PropTypes.bool,\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this prop.\n   */\n  shapeRendering: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   * @default '0 0 24 24'\n   */\n  viewBox: PropTypes.string\n} : void 0;\nif (SvgIcon) {\n  SvgIcon.muiName = 'SvgIcon';\n}\nexport default SvgIcon;","'use client';\n\nimport * as React from 'react';\nimport SvgIcon from \"../SvgIcon/index.js\";\n\n/**\n * Private module reserved for @mui packages.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createSvgIcon(path, displayName) {\n  function Component(props, ref) {\n    return /*#__PURE__*/_jsx(SvgIcon, {\n      \"data-testid\": `${displayName}Icon`,\n      ref: ref,\n      ...props,\n      children: path\n    });\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = `${displayName}Icon`;\n  }\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo(/*#__PURE__*/React.forwardRef(Component));\n}"],"names":["createSvgIcon","_jsx","d","QuizUI","_ref","quiz","navigate","useNavigate","dummyQuiz","name","description","maxMarks","duration","openingTime","Date","closingTime","createdBy","questions","text","image","options","isCorrect","marks","startedQuiz","setStartedQuiz","useState","questionNo","setQuestionNo","remainingTime","setRemainingTime","userAnswers","setUserAnswers","questionStatus","setQuestionStatus","flaggedQuestions","setFlaggedQuestions","useEffect","now","calculateRemainingTime","elapsedTime","timeRemaining","handleSubmitQuiz","timer","setInterval","clearInterval","alert","className","children","_jsxs","onClick","handleFlagQuestion","prevFlags","OutlinedFlag","map","i","type","value","checked","JSON","stringify","onChange","handleAnswerChange","questionIndex","selectedOption","prevAnswers","updatedAnswers","prevStatus","disabled","handlePreviousQuestion","prevNo","Math","max","length","handleNextQuestion","min","time","minutes","floor","seconds","formatTime","_","index","Quiz","user","setUser","_Fragment","getSvgIconUtilityClass","slot","generateUtilityClass","generateUtilityClasses","SvgIconRoot","styled","overridesResolver","props","styles","ownerState","root","color","capitalize","fontSize","memoTheme","theme","userSelect","width","height","display","flexShrink","transition","transitions","create","vars","shorter","variants","hasSvgAsChild","style","fill","typography","pxToRem","Object","entries","palette","filter","_ref2","main","_ref3","action","active","undefined","SvgIcon","React","inProps","ref","useDefaultProps","component","htmlColor","inheritViewBox","titleAccess","viewBox","other","instanceFontSize","more","classes","slots","composeClasses","useUtilityClasses","as","clsx","focusable","role","muiName","path","displayName","Component"],"sourceRoot":""}